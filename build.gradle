/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Ricardo' at '23/10/16 15:22' with Gradle 3.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
	maven { url "http://repo.spring.io/milestone" }
}

ext {
	kryoVersion = '3.0.3'
	moneyVersion = '1.0'
	generatedSourcesDir = file("src/main/generated-sources")
	querydslVersion = '4.1.4'
}

configurations {
	compile.exclude group: 'commons-logging'
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-cache'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-test'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-validation'
	compile "org.springframework.boot:spring-boot-configuration-processor"
	compile 'org.apache.commons:commons-lang3:3.4'
	compile "org.apache.httpcomponents:httpclient"
	compile 'com.h2database:h2'
	compile "org.springframework.session:spring-session"
	compile "org.springframework.security:spring-security-test"
	compile "com.hazelcast:hazelcast"
	compile "com.esotericsoftware:kryo:$kryoVersion"
	compile "com.fasterxml.jackson.core:jackson-annotations"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	compile "com.fasterxml.jackson.module:jackson-module-parameter-names"
	compile "javax.money:money-api:$moneyVersion"
	compile "javax.mail:mail:1.4.7"
	compile "javax.measure:unit-api:1.0"
	compile "org.javamoney:moneta:$moneyVersion"
	compile "org.threeten:threeten-extra:0.9"
	compile "org.thymeleaf:thymeleaf"
	compile "org.thymeleaf:thymeleaf-spring4"
	compile "com.jayway.jsonpath:json-path:2.0.0"
	compile "com.jayway.jsonpath:json-path-assert:2.0.0"
	compile "com.querydsl:querydsl-core:${querydslVersion}"
	compile "com.querydsl:querydsl-jpa:${querydslVersion}"
	compile "com.querydsl:querydsl-apt:${querydslVersion}:hibernate"
	runtime fileTree(dir: 'lib', include: '*.jar')
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}
